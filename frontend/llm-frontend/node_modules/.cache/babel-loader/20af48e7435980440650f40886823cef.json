{"ast":null,"code":"var _jsxFileName = \"/home/ssezmar/programming/xakatons/NorNikel2024/frontend2/llm-frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Функция для загрузки изображения как Blob URL\n  const fetchImage = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/static/images/example.jpg\");\n      if (!response.ok) throw new Error(\"Ошибка загрузки изображения\");\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setImageBlobUrl(url);\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchImage();\n  }, []);\n\n  // Обработка отправки вопроса\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(\"\");\n    setImages([]);\n    try {\n      const res = await fetch(\"http://127.0.0.1:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n\n        // Обработка ответа\n        setResponse(data.answer || \"Ответ не найден\");\n\n        // Загружаем изображения\n        if (Array.isArray(data.images)) {\n          const loadedImages = await Promise.all(data.images.map(async image => {\n            const blobUrl = await fetchImageBlob(image.url);\n            return {\n              ...image,\n              blobUrl // Добавляем blob URL для отображения\n            };\n          }));\n          setImages(loadedImages);\n        } else {\n          console.warn(\"Нет изображений в ответе\");\n        }\n      } else {\n        setResponse(\"Ошибка сервера\");\n      }\n    } catch (err) {\n      console.error(\"Ошибка сети:\", err);\n      setResponse(\"Ошибка сети\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"NorNikel Finder\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: question,\n    onChange: e => setQuestion(e.target.value),\n    rows: 5,\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, loading ? \"Загрузка...\" : \"Отправить\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"response\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, response || \"Ответ появится здесь...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u0441 \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0445 \\u0431\\u0440\\u0430\\u043B\\u0430\\u0441\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"image-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, image.blobUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: image.blobUrl,\n    alt: `Image ${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B:\"), \" \", image.filename, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430:\"), \" \", image.page))))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","App","question","setQuestion","response","setResponse","images","setImages","loading","setLoading","fetchImage","fetch","ok","Error","blob","url","URL","createObjectURL","setImageBlobUrl","error","console","handleSubmit","e","preventDefault","res","method","headers","body","JSON","stringify","data","json","answer","Array","isArray","loadedImages","Promise","all","map","image","blobUrl","fetchImageBlob","warn","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","rows","placeholder","required","type","disabled","index","key","src","alt","filename","page"],"sources":["/home/ssezmar/programming/xakatons/NorNikel2024/frontend2/llm-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Функция для загрузки изображения как Blob URL\n  const fetchImage = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/static/images/example.jpg\");\n      if (!response.ok) throw new Error(\"Ошибка загрузки изображения\");\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setImageBlobUrl(url);\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchImage();\n  }, []);\n\n  // Обработка отправки вопроса\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(\"\");\n    setImages([]);\n\n    try {\n      const res = await fetch(\"http://127.0.0.1:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ question }),\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n\n        // Обработка ответа\n        setResponse(data.answer || \"Ответ не найден\");\n\n        // Загружаем изображения\n        if (Array.isArray(data.images)) {\n          const loadedImages = await Promise.all(\n            data.images.map(async (image) => {\n              const blobUrl = await fetchImageBlob(image.url);\n              return {\n                ...image,\n                blobUrl, // Добавляем blob URL для отображения\n              };\n            })\n          );\n          setImages(loadedImages);\n        } else {\n          console.warn(\"Нет изображений в ответе\");\n        }\n      } else {\n        setResponse(\"Ошибка сервера\");\n      }\n    } catch (err) {\n      console.error(\"Ошибка сети:\", err);\n      setResponse(\"Ошибка сети\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>NorNikel Finder</h1>\n\n      {/* Форма для ввода вопроса */}\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          rows={5}\n          placeholder=\"Введите ваш вопрос...\"\n          required\n        ></textarea>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Загрузка...\" : \"Отправить\"}\n        </button>\n      </form>\n\n      {/* Ответ от сервера */}\n      <div className=\"response\">\n        <h2>Ответ:</h2>\n        <p>{response || \"Ответ появится здесь...\"}</p>\n      </div>\n\n      {/* Отображение изображений */}\n      <div className=\"images\">\n        <h2>Страницы с которых бралась информация:</h2>\n        <div className=\"image-grid\">\n          {images.map((image, index) => (\n            <div key={index} className=\"image-item\">\n              {image.blobUrl ? (\n                <img src={image.blobUrl} alt={`Image ${index + 1}`} />\n              ) : (\n                <p>Ошибка загрузки изображения</p>\n              )}\n              <p>\n                <strong>Файл:</strong> {image.filename} <br />\n                <strong>Страница:</strong> {image.page}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}